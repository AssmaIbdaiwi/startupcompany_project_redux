{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getPosts = createAsyncThunk(\"post/getPosts\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityComment\");\n  const response = await api.json();\n  console.log(response);\n  return response;\n});\nexport const getSinglePosts = createAsyncThunk(\"post/getSinglePosts\", async id => {\n  const api = await fetch(`http://127.0.0.1:8000/api/apiposts/${id}`);\n  const response = await api.json(); // console.log(response);\n\n  return response;\n});\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    singlepost: [],\n    status: null,\n    posts: []\n  },\n  extraReducers: {\n    //get item from api\n    [getPosts.fulfilled]: (state, action) => {\n      state.status = \"success fetch data\";\n      state.posts = action.payload;\n    },\n    [getPosts.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getPosts.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    },\n    // ///single post\n    [getSinglePosts.fulfilled]: (state, action) => {\n      state.status = \"success fetch data\";\n      state.singlepost = action.payload;\n    },\n    [getSinglePosts.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getSinglePosts.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getPosts","api","fetch","response","json","console","log","getSinglePosts","id","postSlice","name","initialState","singlepost","status","posts","extraReducers","fulfilled","state","action","payload","pending","rejected","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/postSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const getPosts = createAsyncThunk(\"post/getPosts\", async () => {\r\n  const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityComment\");\r\n  const response = await api.json();\r\nconsole.log(response);\r\n  return response;\r\n});\r\n\r\nexport const getSinglePosts = createAsyncThunk(\"post/getSinglePosts\", \r\nasync (id) => {\r\n  const api = await fetch(`http://127.0.0.1:8000/api/apiposts/${id}`);\r\n  const response = await api.json();\r\n// console.log(response);\r\n  return response;\r\n});\r\n\r\n\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState: { singlepost: [], status: null, posts: [] },\r\n  extraReducers: {\r\n    //get item from api\r\n    [getPosts.fulfilled]: (state, action) => {\r\n      state.status = \"success fetch data\";\r\n      state.posts = action.payload;\r\n    },\r\n    [getPosts.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getPosts.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    // ///single post\r\n    [getSinglePosts.fulfilled]: (state, action) => {\r\n      state.status = \"success fetch data\";\r\n      state.singlepost = action.payload;\r\n    },\r\n    [getSinglePosts.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getSinglePosts.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,eAAD,EAAkB,YAAY;EACpE,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAvB;EACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EACFC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACE,OAAOA,QAAP;AACD,CALuC,CAAjC;AAOP,OAAO,MAAMI,cAAc,GAAGT,gBAAgB,CAAC,qBAAD,EAC9C,MAAOU,EAAP,IAAc;EACZ,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAE,sCAAqCM,EAAG,EAA1C,CAAvB;EACA,MAAML,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB,CAFY,CAGd;;EACE,OAAOD,QAAP;AACD,CAN6C,CAAvC;AAUP,MAAMM,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,UAAU,EAAE,EAAd;IAAkBC,MAAM,EAAE,IAA1B;IAAgCC,KAAK,EAAE;EAAvC,CAFc;EAG5BC,aAAa,EAAE;IACb;IACA,CAACf,QAAQ,CAACgB,SAAV,GAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACvCD,KAAK,CAACJ,MAAN,GAAe,oBAAf;MACAI,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;IACD,CALY;IAMb,CAACnB,QAAQ,CAACoB,OAAV,GAAqBH,KAAD,IAAW;MAC7BA,KAAK,CAACJ,MAAN,GAAe,qBAAf;IACD,CARY;IASb,CAACb,QAAQ,CAACqB,QAAV,GAAsBJ,KAAD,IAAW;MAC9BA,KAAK,CAACJ,MAAN,GAAe,sBAAf;IACD,CAXY;IAab;IACA,CAACN,cAAc,CAACS,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7CD,KAAK,CAACJ,MAAN,GAAe,oBAAf;MACAI,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACC,OAA1B;IACD,CAjBY;IAkBb,CAACZ,cAAc,CAACa,OAAhB,GAA2BH,KAAD,IAAW;MACnCA,KAAK,CAACJ,MAAN,GAAe,qBAAf;IACD,CApBY;IAqBb,CAACN,cAAc,CAACc,QAAhB,GAA4BJ,KAAD,IAAW;MACpCA,KAAK,CAACJ,MAAN,GAAe,sBAAf;IACD;EAvBY;AAHa,CAAD,CAA7B;AAkCA,eAAeJ,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}