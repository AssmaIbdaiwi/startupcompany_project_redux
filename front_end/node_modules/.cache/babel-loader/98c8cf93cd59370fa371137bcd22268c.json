{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getComments = createAsyncThunk(\"commentcomunity/getComments\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityComment\");\n  const response = await api.json();\n  console.log(response);\n  return response;\n});\nconst postSlice = createSlice({\n  name: \"commentcomunity\",\n  initialState: {\n    status: null,\n    commentcomunities: []\n  },\n  extraReducers: {\n    //get item from api\n    [getCommunityComments.fulfilled]: (state, action) => {\n      state.status = \"success fetch data\";\n      state.commentcomunities = action.payload;\n    },\n    [getCommunityComments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getCommunityComments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getComments","api","fetch","response","json","console","log","postSlice","name","initialState","status","commentcomunities","extraReducers","getCommunityComments","fulfilled","state","action","payload","pending","rejected","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/ComunityComment.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const getComments = createAsyncThunk(\r\n  \"commentcomunity/getComments\",\r\n  async () => {\r\n    const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityComment\");\r\n    const response = await api.json();\r\n    console.log(response);\r\n    return response;\r\n  }\r\n);\r\n\r\n\r\n\r\nconst postSlice = createSlice({\r\n  name: \"commentcomunity\",\r\n  initialState: { status: null, commentcomunities: [] },\r\n  extraReducers: {\r\n    //get item from api\r\n    [getCommunityComments.fulfilled]: (state, action) => {\r\n      state.status = \"success fetch data\";\r\n      state.commentcomunities = action.payload;\r\n    },\r\n    [getCommunityComments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getCommunityComments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CACzC,6BADyC,EAEzC,YAAY;EACV,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAvB;EACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACA,OAAOA,QAAP;AACD,CAPwC,CAApC;AAYP,MAAMI,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,iBADsB;EAE5BC,YAAY,EAAE;IAAEC,MAAM,EAAE,IAAV;IAAgBC,iBAAiB,EAAE;EAAnC,CAFc;EAG5BC,aAAa,EAAE;IACb;IACA,CAACC,oBAAoB,CAACC,SAAtB,GAAkC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACnDD,KAAK,CAACL,MAAN,GAAe,oBAAf;MACAK,KAAK,CAACJ,iBAAN,GAA0BK,MAAM,CAACC,OAAjC;IACD,CALY;IAMb,CAACJ,oBAAoB,CAACK,OAAtB,GAAiCH,KAAD,IAAW;MACzCA,KAAK,CAACL,MAAN,GAAe,qBAAf;IACD,CARY;IASb,CAACG,oBAAoB,CAACM,QAAtB,GAAkCJ,KAAD,IAAW;MAC1CA,KAAK,CAACL,MAAN,GAAe,sBAAf;IACD;EAXY;AAHa,CAAD,CAA7B;AAkBA,eAAeH,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}