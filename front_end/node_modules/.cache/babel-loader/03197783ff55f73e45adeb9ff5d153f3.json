{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport const check = createAsyncThunk(async (item, thunkAPI) => {\n  // const response = await axios.post('http://127.0.0.1:8000/api/login',item);\n  if (response.status === 200) {\n    alert(\"login Successfully\");\n  }\n\n  return response.data;\n});\nexport const addUser = createAsyncThunk(async (item, thunkAPI) => {\n  const response = await axios.post('http://127.0.0.1:8000/api/register', item);\n\n  if (response.status === 200) {\n    alert(\"register Successfully\");\n  }\n\n  return response.data;\n}); /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst userLoginSlice = createSlice({\n  name: 'user',\n  initialState: {\n    items: [],\n    status: null\n  },\n  extraReducers: {\n    //check user from api\n    [check.fulfilled]: (state, action) => {\n      state.status = 'success fetch data';\n      state.items.push(action.payload);\n    },\n    [check.pending]: state => {\n      state.status = 'pending  fetch data';\n    },\n    [check.rejected]: state => {\n      state.status = 'rejected  fetch data';\n    },\n    //add user to api\n    [addUser.fulfilled]: (state, action) => {\n      state.status = 'success send data';\n      state.items.push(action.payload);\n    },\n    [addUser.pending]: state => {\n      state.status = 'pending send data';\n    },\n    [addUser.rejected]: state => {\n      state.status = 'rejected send data';\n    }\n  }\n});\nexport default userLoginSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","check","item","thunkAPI","response","status","alert","data","addUser","post","userLoginSlice","name","initialState","items","extraReducers","fulfilled","state","action","push","payload","pending","rejected","reducer"],"sources":["C:/Users/User/Desktop/project 9/startupcompany_project_redux/front_end/src/redux/userLoginSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nexport const check = createAsyncThunk(\r\n    async (item , thunkAPI)=>{\r\n \r\n       // const response = await axios.post('http://127.0.0.1:8000/api/login',item);\r\n        \r\n        if(response.status === 200){\r\n            alert(\"login Successfully\");\r\n        }\r\n        return response.data;\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\nexport const addUser = createAsyncThunk(\r\n    async (item , thunkAPI)=>{\r\n \r\n        const response = await axios.post('http://127.0.0.1:8000/api/register',item);\r\n        \r\n        if(response.status === 200){\r\n            alert(\"register Successfully\");\r\n        }\r\n        return response.data;\r\n    }\r\n);\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst userLoginSlice = createSlice({\r\n    name:'user',\r\n    initialState:{items:[] , status:null},\r\n    extraReducers:{\r\n\r\n\r\n        //check user from api\r\n\r\n        [check.fulfilled]:(state , action)=>{\r\n            state.status = 'success fetch data';\r\n            state.items.push(action.payload);\r\n\r\n        },\r\n        [check.pending]:(state  )=>{\r\n            state.status = 'pending  fetch data';\r\n            \r\n        },\r\n        [check.rejected]:(state )=>{\r\n            state.status = 'rejected  fetch data';\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //add user to api\r\n\r\n        [addUser.fulfilled]:(state , action)=>{\r\n            state.status = 'success send data';\r\n            state.items.push(action.payload);\r\n            \r\n\r\n        },\r\n        [addUser.pending]:(state  )=>{\r\n            state.status = 'pending send data';\r\n            \r\n        },\r\n        [addUser.rejected]:(state )=>{\r\n            state.status = 'rejected send data';\r\n        },\r\n\r\n    }\r\n})\r\n\r\nexport default userLoginSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAIA,OAAO,MAAMC,KAAK,GAAGJ,gBAAgB,CACjC,OAAOK,IAAP,EAAcC,QAAd,KAAyB;EAEtB;EAEC,IAAGC,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;IACvBC,KAAK,CAAC,oBAAD,CAAL;EACH;;EACD,OAAOF,QAAQ,CAACG,IAAhB;AACH,CATgC,CAA9B;AAeP,OAAO,MAAMC,OAAO,GAAGX,gBAAgB,CACnC,OAAOK,IAAP,EAAcC,QAAd,KAAyB;EAErB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACU,IAAN,CAAW,oCAAX,EAAgDP,IAAhD,CAAvB;;EAEA,IAAGE,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;IACvBC,KAAK,CAAC,uBAAD,CAAL;EACH;;EACD,OAAOF,QAAQ,CAACG,IAAhB;AACH,CATkC,CAAhC,C,CAcP;;AAEA,MAAMG,cAAc,GAAGZ,WAAW,CAAC;EAC/Ba,IAAI,EAAC,MAD0B;EAE/BC,YAAY,EAAC;IAACC,KAAK,EAAC,EAAP;IAAYR,MAAM,EAAC;EAAnB,CAFkB;EAG/BS,aAAa,EAAC;IAGV;IAEA,CAACb,KAAK,CAACc,SAAP,GAAkB,CAACC,KAAD,EAASC,MAAT,KAAkB;MAChCD,KAAK,CAACX,MAAN,GAAe,oBAAf;MACAW,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;IAEH,CATS;IAUV,CAAClB,KAAK,CAACmB,OAAP,GAAiBJ,KAAD,IAAW;MACvBA,KAAK,CAACX,MAAN,GAAe,qBAAf;IAEH,CAbS;IAcV,CAACJ,KAAK,CAACoB,QAAP,GAAkBL,KAAD,IAAU;MACvBA,KAAK,CAACX,MAAN,GAAe,sBAAf;IACH,CAhBS;IAuBV;IAEA,CAACG,OAAO,CAACO,SAAT,GAAoB,CAACC,KAAD,EAASC,MAAT,KAAkB;MAClCD,KAAK,CAACX,MAAN,GAAe,mBAAf;MACAW,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;IAGH,CA9BS;IA+BV,CAACX,OAAO,CAACY,OAAT,GAAmBJ,KAAD,IAAW;MACzBA,KAAK,CAACX,MAAN,GAAe,mBAAf;IAEH,CAlCS;IAmCV,CAACG,OAAO,CAACa,QAAT,GAAoBL,KAAD,IAAU;MACzBA,KAAK,CAACX,MAAN,GAAe,oBAAf;IACH;EArCS;AAHiB,CAAD,CAAlC;AA6CA,eAAeK,cAAc,CAACY,OAA9B"},"metadata":{},"sourceType":"module"}