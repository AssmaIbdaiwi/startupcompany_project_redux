{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const getComments = createAsyncThunk(\"comment/getComments\", async id => {\n  const api = await fetch(`http://127.0.0.1:8000/api/apicomment/${id}`);\n  const response = await api.json();\n  console.log(response);\n  return response;\n});\nexport const addComment = createAsyncThunk(\"comment/addComment\", async (data, thunkAPI) => {\n  const response = await axios.post(\"http://127.0.0.1:8000/api/addComment\", data); // const add = await response.data;\n  // console.log('add',add)\n\n  if (response.status == 200) {\n    Swal.fire({\n      title: \"Item\",\n      text: \"Has been Added Successfully\",\n      type: \"success\"\n    });\n  }\n\n  return response.data; //  return add;\n}); ///////update\n\nexport const updateItem = createAsyncThunk(\"item/updateItem\", async args => {\n  const id = args.id;\n  const response = await fetch(`http://127.0.0.1:8000/api/update_item/${id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: args.name,\n      description: args.description\n    })\n  });\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"Item\",\n      text: \"Has been updated Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n}); ///delete\n\nexport const deleteComment = createAsyncThunk(\"comment/deleteComments\", async id => {\n  const response = await fetch(`http://127.0.0.1:8000/api/deleteComment/${id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"Item\",\n      text: \"Has been deleted Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n}); /////////////////////////////////////////////////////////////////////////////////////\n\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState: {\n    comments: [],\n    status: null\n  },\n  extraReducers: {\n    //get item from api\n    [getComments.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success fetch data\";\n      state.comments = action.payload;\n    },\n    [getComments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    },\n    // addcomment to api\n    [addComment.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success send data\";\n      state.comments.push(action.payload);\n    },\n    [addComment.pending]: state => {\n      state.status = \"pending send data\";\n    },\n    [addComment.rejected]: state => {\n      state.status = \"rejected send data\";\n    },\n    //update item in api\n    [updateItem.fulfilled]: (state, action) => {\n      state.status = \"success update data\";\n      const {\n        id\n      } = action.payload;\n      const item = state.items.find(item => item.id == id);\n      item.name = action.payload.name;\n      item.description = action.payload.description;\n      item.image = action.payload.image;\n    },\n    [updateItem.pending]: state => {\n      state.status = \"pending update data\";\n    },\n    [updateItem.rejected]: state => {\n      state.status = \"rejected update data\";\n    },\n    //delete item in api\n    [deleteComment.fulfilled]: (state, action) => {\n      state.status = \"success delete data\";\n      const {\n        id\n      } = action.payload;\n      state.comments = state.comments.filter(comment => comment.id != id);\n    },\n    [deleteComment.pending]: state => {\n      state.status = \"pending delete data\";\n    },\n    [deleteComment.rejected]: state => {\n      state.status = \"rejected delete data\";\n    }\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","getComments","id","api","fetch","response","json","console","log","addComment","data","thunkAPI","post","status","fire","title","text","type","updateItem","args","method","headers","body","JSON","stringify","name","description","ok","res","deleteComment","commentSlice","initialState","comments","extraReducers","fulfilled","state","action","payload","pending","rejected","push","item","items","find","image","filter","comment","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/commentSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const getComments = createAsyncThunk(\"comment/getComments\", async (id) => {\r\n  const api = await fetch(`http://127.0.0.1:8000/api/apicomment/${id}`);\r\n  const response = await api.json();\r\n  console.log(response);\r\n  return response;\r\n});\r\n\r\n\r\n\r\nexport const addComment = createAsyncThunk(\r\n  \"comment/addComment\",\r\n  async (data, thunkAPI) => {\r\n    const response = await axios.post(\r\n      \"http://127.0.0.1:8000/api/addComment\",\r\n      data\r\n    );\r\n// const add = await response.data;\r\n// console.log('add',add)\r\n    if (response.status == 200) {\r\n      Swal.fire({\r\n        title: \"Item\",\r\n        text: \"Has been Added Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    return response.data;\r\n    //  return add;\r\n  }\r\n \r\n);\r\n///////update\r\nexport const updateItem = createAsyncThunk(\"item/updateItem\", async (args) => {\r\n  const id = args.id;\r\n  const response = await fetch(`http://127.0.0.1:8000/api/update_item/${id}`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ name: args.name, description: args.description }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    Swal.fire({\r\n      title: \"Item\",\r\n      text: \"Has been updated Successfully\",\r\n      type: \"success\",\r\n    });\r\n  }\r\n  const res = response.json();\r\n  return res;\r\n});\r\n\r\n///delete\r\nexport const deleteComment = createAsyncThunk(\r\n  \"comment/deleteComments\",\r\n  async (id) => {\r\n    const response = await fetch(\r\n      `http://127.0.0.1:8000/api/deleteComment/${id}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      Swal.fire({\r\n        title: \"Item\",\r\n        text: \"Has been deleted Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    const res = response.json();\r\n    return res;\r\n  }\r\n);\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\nconst commentSlice = createSlice({\r\n  name: \"comment\",\r\n  initialState: { comments: [], status: null },\r\n  extraReducers: {\r\n    //get item from api\r\n    [getComments.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success fetch data\";\r\n      state.comments = action.payload;\r\n    },\r\n    [getComments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    // addcomment to api\r\n\r\n    [addComment.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success send data\";\r\n      state.comments.push(action.payload);\r\n    },\r\n    [addComment.pending]: (state) => {\r\n      state.status = \"pending send data\";\r\n    },\r\n    [addComment.rejected]: (state) => {\r\n      state.status = \"rejected send data\";\r\n    },\r\n\r\n    //update item in api\r\n    [updateItem.fulfilled]: (state, action) => {\r\n      state.status = \"success update data\";\r\n      const { id } = action.payload;\r\n      const item = state.items.find((item) => item.id == id);\r\n      item.name = action.payload.name;\r\n      item.description = action.payload.description;\r\n      item.image = action.payload.image;\r\n    },\r\n    [updateItem.pending]: (state) => {\r\n      state.status = \"pending update data\";\r\n    },\r\n    [updateItem.rejected]: (state) => {\r\n      state.status = \"rejected update data\";\r\n    },\r\n\r\n    //delete item in api\r\n    [deleteComment.fulfilled]: (state, action) => {\r\n      state.status = \"success delete data\";\r\n      const { id } = action.payload;\r\n      state.comments = state.comments.filter((comment) => comment.id != id);\r\n    },\r\n    [deleteComment.pending]: (state) => {\r\n      state.status = \"pending delete data\";\r\n    },\r\n    [deleteComment.rejected]: (state) => {\r\n      state.status = \"rejected delete data\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default commentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,qBAAD,EAAwB,MAAOK,EAAP,IAAc;EAC/E,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,wCAAuCF,EAAG,EAA5C,CAAvB;EACA,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACA,OAAOA,QAAP;AACD,CAL0C,CAApC;AASP,OAAO,MAAMI,UAAU,GAAGZ,gBAAgB,CACxC,oBADwC,EAExC,OAAOa,IAAP,EAAaC,QAAb,KAA0B;EACxB,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACa,IAAN,CACrB,sCADqB,EAErBF,IAFqB,CAAvB,CADwB,CAK5B;EACA;;EACI,IAAIL,QAAQ,CAACQ,MAAT,IAAmB,GAAvB,EAA4B;IAC1Bb,IAAI,CAACc,IAAL,CAAU;MACRC,KAAK,EAAE,MADC;MAERC,IAAI,EAAE,6BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,OAAOZ,QAAQ,CAACK,IAAhB,CAdwB,CAexB;AACD,CAlBuC,CAAnC,C,CAqBP;;AACA,OAAO,MAAMQ,UAAU,GAAGrB,gBAAgB,CAAC,iBAAD,EAAoB,MAAOsB,IAAP,IAAgB;EAC5E,MAAMjB,EAAE,GAAGiB,IAAI,CAACjB,EAAhB;EACA,MAAMG,QAAQ,GAAG,MAAMD,KAAK,CAAE,yCAAwCF,EAAG,EAA7C,EAAgD;IAC1EkB,MAAM,EAAE,MADkE;IAE1EC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFiE;IAG1EC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEC,IAAI,EAAEN,IAAI,CAACM,IAAb;MAAmBC,WAAW,EAAEP,IAAI,CAACO;IAArC,CAAf;EAHoE,CAAhD,CAA5B;;EAMA,IAAIrB,QAAQ,CAACsB,EAAb,EAAiB;IACf3B,IAAI,CAACc,IAAL,CAAU;MACRC,KAAK,EAAE,MADC;MAERC,IAAI,EAAE,+BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,MAAMW,GAAG,GAAGvB,QAAQ,CAACC,IAAT,EAAZ;EACA,OAAOsB,GAAP;AACD,CAjByC,CAAnC,C,CAmBP;;AACA,OAAO,MAAMC,aAAa,GAAGhC,gBAAgB,CAC3C,wBAD2C,EAE3C,MAAOK,EAAP,IAAc;EACZ,MAAMG,QAAQ,GAAG,MAAMD,KAAK,CACzB,2CAA0CF,EAAG,EADpB,EAE1B;IACEkB,MAAM,EAAE,MADV;IAEEC,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EAFX,CAF0B,CAA5B;;EAOA,IAAIhB,QAAQ,CAACsB,EAAb,EAAiB;IACf3B,IAAI,CAACc,IAAL,CAAU;MACRC,KAAK,EAAE,MADC;MAERC,IAAI,EAAE,+BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,MAAMW,GAAG,GAAGvB,QAAQ,CAACC,IAAT,EAAZ;EACA,OAAOsB,GAAP;AACD,CAnB0C,CAAtC,C,CAuBP;;AACA,MAAME,YAAY,GAAGhC,WAAW,CAAC;EAC/B2B,IAAI,EAAE,SADyB;EAE/BM,YAAY,EAAE;IAAEC,QAAQ,EAAE,EAAZ;IAAgBnB,MAAM,EAAE;EAAxB,CAFiB;EAG/BoB,aAAa,EAAE;IACb;IACA,CAAChC,WAAW,CAACiC,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1C7B,OAAO,CAACC,GAAR,CAAY4B,MAAZ;MACAD,KAAK,CAACtB,MAAN,GAAe,oBAAf;MACAsB,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;IACD,CANY;IAOb,CAACpC,WAAW,CAACqC,OAAb,GAAwBH,KAAD,IAAW;MAChCA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CATY;IAUb,CAACZ,WAAW,CAACsC,QAAb,GAAyBJ,KAAD,IAAW;MACjCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD,CAZY;IAcb;IAEA,CAACJ,UAAU,CAACyB,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzC7B,OAAO,CAACC,GAAR,CAAY4B,MAAZ;MACAD,KAAK,CAACtB,MAAN,GAAe,mBAAf;MACAsB,KAAK,CAACH,QAAN,CAAeQ,IAAf,CAAoBJ,MAAM,CAACC,OAA3B;IACD,CApBY;IAqBb,CAAC5B,UAAU,CAAC6B,OAAZ,GAAuBH,KAAD,IAAW;MAC/BA,KAAK,CAACtB,MAAN,GAAe,mBAAf;IACD,CAvBY;IAwBb,CAACJ,UAAU,CAAC8B,QAAZ,GAAwBJ,KAAD,IAAW;MAChCA,KAAK,CAACtB,MAAN,GAAe,oBAAf;IACD,CA1BY;IA4Bb;IACA,CAACK,UAAU,CAACgB,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzCD,KAAK,CAACtB,MAAN,GAAe,qBAAf;MACA,MAAM;QAAEX;MAAF,IAASkC,MAAM,CAACC,OAAtB;MACA,MAAMI,IAAI,GAAGN,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAkBF,IAAD,IAAUA,IAAI,CAACvC,EAAL,IAAWA,EAAtC,CAAb;MACAuC,IAAI,CAAChB,IAAL,GAAYW,MAAM,CAACC,OAAP,CAAeZ,IAA3B;MACAgB,IAAI,CAACf,WAAL,GAAmBU,MAAM,CAACC,OAAP,CAAeX,WAAlC;MACAe,IAAI,CAACG,KAAL,GAAaR,MAAM,CAACC,OAAP,CAAeO,KAA5B;IACD,CApCY;IAqCb,CAAC1B,UAAU,CAACoB,OAAZ,GAAuBH,KAAD,IAAW;MAC/BA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CAvCY;IAwCb,CAACK,UAAU,CAACqB,QAAZ,GAAwBJ,KAAD,IAAW;MAChCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD,CA1CY;IA4Cb;IACA,CAACgB,aAAa,CAACK,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5CD,KAAK,CAACtB,MAAN,GAAe,qBAAf;MACA,MAAM;QAAEX;MAAF,IAASkC,MAAM,CAACC,OAAtB;MACAF,KAAK,CAACH,QAAN,GAAiBG,KAAK,CAACH,QAAN,CAAea,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAAC5C,EAAR,IAAcA,EAAjD,CAAjB;IACD,CAjDY;IAkDb,CAAC2B,aAAa,CAACS,OAAf,GAA0BH,KAAD,IAAW;MAClCA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CApDY;IAqDb,CAACgB,aAAa,CAACU,QAAf,GAA2BJ,KAAD,IAAW;MACnCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD;EAvDY;AAHgB,CAAD,CAAhC;AA8DA,eAAeiB,YAAY,CAACiB,OAA5B"},"metadata":{},"sourceType":"module"}