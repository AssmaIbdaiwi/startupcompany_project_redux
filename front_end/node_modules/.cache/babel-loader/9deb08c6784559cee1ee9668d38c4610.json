{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nexport const addUser = createAsyncThunk(\"item/addItem\", async (item, thunkAPI) => {\n  const response = await axios.post(\"http://127.0.0.1:8000/api/add_item\", item);\n\n  if (response.status === 200) {// Swal.fire({\n    //     title: \"Item\",\n    //     text: \"Has been Added Successfully\",\n    //     type: \"success\"\n    // });\n    // alert(\"item Added Successfully\");\n  }\n\n  return response.data;\n});\nexport const getUser = createAsyncThunk(\"item/getItems\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/items\");\n  const response = await api.json();\n  return response;\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    email: \"aiman@mail.com\",\n    password: \"12345\",\n    isLogged: false\n  },\n  extraReducers: {\n    signup: (state, action) => {\n      // [addUser.fulfilled]:(state , action)=>{\n      //     state.status = 'success send data';\n      //     state.items.push(action.payload);\n      // },\n      // [addUser.pending]:(state  )=>{\n      //     state.status = 'pending send data';\n      // },\n      // [addUser.rejected]:(state )=>{\n      //     state.status = 'rejected send data';\n      // },\n      axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000/api/register\",\n        data: action.payload\n      }); //   if (\n      //     action.payload.email === state.email &&\n      //     action.payload.password === state.password\n      //   ) {\n      //     Swal.fire({\n      //       title: \"Login Successfull\",\n      //       text: \"Welcome to our site we hope you spent great time with us :)\",\n      //       type: \"success\",\n      //     });\n      //     state.isLogged = true;\n      //   } else {\n      //     Swal.fire({\n      //       title: \"Wrong\",\n      //       text: \"incorrect Email or Password\",\n      //       type: \"success\",\n      //     });\n      //   }\n    },\n    login: (state, action) => {\n      if (action.payload.email === state.email && action.payload.password === state.password) {\n        Swal.fire({\n          title: \"Login Successfull\",\n          text: \"Welcome to our site we hope you spent great time with us :)\",\n          type: \"success\"\n        });\n        state.isLogged = true;\n      } else {\n        Swal.fire({\n          title: \"Wrong\",\n          text: \"incorrect Email or Password\",\n          type: \"success\"\n        });\n      }\n    },\n    logout: state => {\n      state.isLogged = false;\n    }\n  }\n});\nexport const {\n  signup,\n  login,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Swal","axios","addUser","item","thunkAPI","response","post","status","data","getUser","api","fetch","json","userSlice","name","initialState","email","password","isLogged","extraReducers","signup","state","action","method","url","payload","login","fire","title","text","type","logout","actions","reducer"],"sources":["C:/Users/User/Desktop/project 9/startupcompany_project_redux/front_end/src/redux/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n\nexport const addUser = createAsyncThunk(\n  \"item/addItem\",\n  async (item, thunkAPI) => {\n    const response = await axios.post(\n      \"http://127.0.0.1:8000/api/add_item\",\n      item\n    );\n\n    if (response.status === 200) {\n      // Swal.fire({\n      //     title: \"Item\",\n      //     text: \"Has been Added Successfully\",\n      //     type: \"success\"\n      // });\n      // alert(\"item Added Successfully\");\n    }\n    return response.data;\n  }\n);\n\nexport const getUser = createAsyncThunk(\"item/getItems\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/items\");\n  const response = await api.json();\n\n  return response;\n});\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: { email: \"aiman@mail.com\", password: \"12345\", isLogged: false },\n  extraReducers: {\n    signup: (state, action) => {\n      // [addUser.fulfilled]:(state , action)=>{\n      //     state.status = 'success send data';\n      //     state.items.push(action.payload);\n\n      // },\n      // [addUser.pending]:(state  )=>{\n      //     state.status = 'pending send data';\n\n      // },\n      // [addUser.rejected]:(state )=>{\n      //     state.status = 'rejected send data';\n      // },\n\n      axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000/api/register\",\n        data: action.payload,\n      });\n\n    //   if (\n    //     action.payload.email === state.email &&\n    //     action.payload.password === state.password\n    //   ) {\n    //     Swal.fire({\n    //       title: \"Login Successfull\",\n    //       text: \"Welcome to our site we hope you spent great time with us :)\",\n    //       type: \"success\",\n    //     });\n    //     state.isLogged = true;\n    //   } else {\n    //     Swal.fire({\n    //       title: \"Wrong\",\n    //       text: \"incorrect Email or Password\",\n    //       type: \"success\",\n    //     });\n    //   }\n    },\n    login: (state, action) => {\n      if (\n        action.payload.email === state.email &&\n        action.payload.password === state.password\n      ) {\n        Swal.fire({\n          title: \"Login Successfull\",\n          text: \"Welcome to our site we hope you spent great time with us :)\",\n          type: \"success\",\n        });\n        state.isLogged = true;\n      } else {\n        Swal.fire({\n          title: \"Wrong\",\n          text: \"incorrect Email or Password\",\n          type: \"success\",\n        });\n      }\n    },\n    logout: (state) => {\n      state.isLogged = false;\n    },\n  },\n});\nexport const { signup, login, logout } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGH,gBAAgB,CACrC,cADqC,EAErC,OAAOI,IAAP,EAAaC,QAAb,KAA0B;EACxB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CACrB,oCADqB,EAErBH,IAFqB,CAAvB;;EAKA,IAAIE,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,CAC3B;IACA;IACA;IACA;IACA;IACA;EACD;;EACD,OAAOF,QAAQ,CAACG,IAAhB;AACD,CAjBoC,CAAhC;AAoBP,OAAO,MAAMC,OAAO,GAAGV,gBAAgB,CAAC,eAAD,EAAkB,YAAY;EACnE,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;EACA,MAAMN,QAAQ,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAAvB;EAEA,OAAOP,QAAP;AACD,CALsC,CAAhC;AAOP,MAAMQ,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,KAAK,EAAE,gBAAT;IAA2BC,QAAQ,EAAE,OAArC;IAA8CC,QAAQ,EAAE;EAAxD,CAFc;EAG5BC,aAAa,EAAE;IACbC,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzB;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MAEArB,KAAK,CAAC;QACJsB,MAAM,EAAE,KADJ;QAEJC,GAAG,EAAE,oCAFD;QAGJhB,IAAI,EAAEc,MAAM,CAACG;MAHT,CAAD,CAAL,CAdyB,CAoB3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACC,CAtCY;IAuCbC,KAAK,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MACxB,IACEA,MAAM,CAACG,OAAP,CAAeT,KAAf,KAAyBK,KAAK,CAACL,KAA/B,IACAM,MAAM,CAACG,OAAP,CAAeR,QAAf,KAA4BI,KAAK,CAACJ,QAFpC,EAGE;QACAjB,IAAI,CAAC2B,IAAL,CAAU;UACRC,KAAK,EAAE,mBADC;UAERC,IAAI,EAAE,6DAFE;UAGRC,IAAI,EAAE;QAHE,CAAV;QAKAT,KAAK,CAACH,QAAN,GAAiB,IAAjB;MACD,CAVD,MAUO;QACLlB,IAAI,CAAC2B,IAAL,CAAU;UACRC,KAAK,EAAE,OADC;UAERC,IAAI,EAAE,6BAFE;UAGRC,IAAI,EAAE;QAHE,CAAV;MAKD;IACF,CAzDY;IA0DbC,MAAM,EAAGV,KAAD,IAAW;MACjBA,KAAK,CAACH,QAAN,GAAiB,KAAjB;IACD;EA5DY;AAHa,CAAD,CAA7B;AAkEA,OAAO,MAAM;EAAEE,MAAF;EAAUM,KAAV;EAAiBK;AAAjB,IAA4BlB,SAAS,CAACmB,OAA5C;AACP,eAAenB,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}