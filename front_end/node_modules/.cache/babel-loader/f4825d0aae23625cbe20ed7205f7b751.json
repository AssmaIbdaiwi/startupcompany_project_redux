{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const getComunityComments = createAsyncThunk(\"comunitycomment/getComunityComments\", async id => {\n  const api = await fetch(`http://127.0.0.1:8000/api/apiCommunityComment/${id}`);\n  const response = await api.json();\n  console.log(response);\n  return response;\n}); // export const addComment = createAsyncThunk(\n//   \"comment/addComment\",\n//   async (data, thunkAPI) => {\n//     const response = await axios.post(\n//       \"http://127.0.0.1:8000/api/addComment\",\n//       data\n//     );\n//     // const add = await response.data;\n//     // console.log('add',add)\n//     if (response.status == 200) {\n//       Swal.fire({\n//         title: \"comment\",\n//         text: \"Has been Added Successfully\",\n//         type: \"success\",\n//       });\n//     }\n//     return response.data;\n//     //  return add;\n//   }\n// );\n// ///////update\n// export const updateComment = createAsyncThunk(\n//   \"comment/updateComment\",\n//   async (comment, thunkAPI) => {\n//     // const id = args.id;\n//     // console.log(args, id);\n//     const response = await fetch(\n//       `http://127.0.0.1:8000/api/updateComment/${comment.id}`,\n//       {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(comment),\n//       }\n//     );\n//     if (response.ok) {\n//       Swal.fire({\n//         title: \"comment\",\n//         text: \"Has been updated Successfully\",\n//         type: \"success\",\n//       });\n//     }\n//     const res = await response.json();\n//     console.log(res);\n//     thunkAPI.dispatch(getComments(res.post_id_comment));\n//     return res;\n//   }\n// );\n// ///delete\n// export const deleteComment = createAsyncThunk(\n//   \"comunitycomment/deleteComments\",\n//   async (id) => {\n//     const response = await fetch(\n//       `http://127.0.0.1:8000/api/deleteComment/${id}`,\n//       {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//       }\n//     );\n//     if (response.ok) {\n//       Swal.fire({\n//         title: \"comment\",\n//         text: \"Has been deleted Successfully\",\n//         type: \"success\",\n//       });\n//     }\n//     const res = response.json();\n//     return res;\n//   }\n// );\n/////////////////////////////////////////////////////////////////////////////////////\n\nconst commentSlice = createSlice({\n  name: \"comunitycomment\",\n  initialState: {\n    comunitycomments: [],\n    status: null\n  },\n  extraReducers: {\n    //get comment from api\n    [getComunityComments.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success fetch data\";\n      state.comunitycomments = action.payload;\n    },\n    [getComunityComments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComunityComments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    } // addcomment to api\n    //     [addComment.fulfilled]: (state, action) => {\n    //       console.log(action);\n    //       state.status = \"success send data\";\n    //       state.comments.push(action.payload);\n    //     },\n    //     [addComment.pending]: (state) => {\n    //       state.status = \"pending send data\";\n    //     },\n    //     [addComment.rejected]: (state) => {\n    //       state.status = \"rejected send data\";\n    //     },\n    //     //update comment in api\n    //     [updateComment.fulfilled]: (state, action) => {\n    //       state.status = \"success update data\";\n    //       const { id } = action.payload;\n    //       const comment = state.comments.find((comment) => comment.id == id);\n    //       comment.comment = action.payload.comment;\n    //     },\n    //     [updateComment.pending]: (state) => {\n    //       state.status = \"pending update data\";\n    //     },\n    //     [updateComment.rejected]: (state) => {\n    //       state.status = \"rejected update data\";\n    //     },\n    //     //delete comment in api\n    //     [deleteComment.fulfilled]: (state, action) => {\n    //       state.status = \"success delete data\";\n    //       const { id } = action.payload;\n    //       state.comments = state.comments.filter((comment) => comment.id != id);\n    //     },\n    //     [deleteComment.pending]: (state) => {\n    //       state.status = \"pending delete data\";\n    //     },\n    //     [deleteComment.rejected]: (state) => {\n    //       state.status = \"rejected delete data\";\n    //     },\n\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","getComunityComments","id","api","fetch","response","json","console","log","commentSlice","name","initialState","comunitycomments","status","extraReducers","fulfilled","state","action","payload","pending","rejected","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/ComunityComment.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const getComunityComments = createAsyncThunk(\r\n  \"comunitycomment/getComunityComments\",\r\n  async (id) => {\r\n    const api = await fetch(\r\n      `http://127.0.0.1:8000/api/apiCommunityComment/${id}`\r\n    );\r\n    const response = await api.json();\r\n    console.log(response);\r\n    return response;\r\n  }\r\n);\r\n\r\n// export const addComment = createAsyncThunk(\r\n//   \"comment/addComment\",\r\n//   async (data, thunkAPI) => {\r\n//     const response = await axios.post(\r\n//       \"http://127.0.0.1:8000/api/addComment\",\r\n//       data\r\n//     );\r\n//     // const add = await response.data;\r\n//     // console.log('add',add)\r\n//     if (response.status == 200) {\r\n//       Swal.fire({\r\n//         title: \"comment\",\r\n//         text: \"Has been Added Successfully\",\r\n//         type: \"success\",\r\n//       });\r\n//     }\r\n//     return response.data;\r\n//     //  return add;\r\n//   }\r\n// );\r\n// ///////update\r\n// export const updateComment = createAsyncThunk(\r\n//   \"comment/updateComment\",\r\n//   async (comment, thunkAPI) => {\r\n//     // const id = args.id;\r\n//     // console.log(args, id);\r\n//     const response = await fetch(\r\n//       `http://127.0.0.1:8000/api/updateComment/${comment.id}`,\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(comment),\r\n//       }\r\n//     );\r\n\r\n//     if (response.ok) {\r\n//       Swal.fire({\r\n//         title: \"comment\",\r\n//         text: \"Has been updated Successfully\",\r\n//         type: \"success\",\r\n//       });\r\n//     }\r\n//     const res = await response.json();\r\n//     console.log(res);\r\n//     thunkAPI.dispatch(getComments(res.post_id_comment));\r\n\r\n//     return res;\r\n//   }\r\n// );\r\n\r\n// ///delete\r\n// export const deleteComment = createAsyncThunk(\r\n//   \"comunitycomment/deleteComments\",\r\n//   async (id) => {\r\n//     const response = await fetch(\r\n//       `http://127.0.0.1:8000/api/deleteComment/${id}`,\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//       }\r\n//     );\r\n//     if (response.ok) {\r\n//       Swal.fire({\r\n//         title: \"comment\",\r\n//         text: \"Has been deleted Successfully\",\r\n//         type: \"success\",\r\n//       });\r\n//     }\r\n//     const res = response.json();\r\n//     return res;\r\n//   }\r\n// );\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\nconst commentSlice = createSlice({\r\n  name: \"comunitycomment\",\r\n  initialState: { comunitycomments: [], status: null },\r\n  extraReducers: {\r\n    //get comment from api\r\n    [getComunityComments.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success fetch data\";\r\n      state.comunitycomments = action.payload;\r\n    },\r\n    [getComunityComments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComunityComments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    // addcomment to api\r\n\r\n//     [addComment.fulfilled]: (state, action) => {\r\n//       console.log(action);\r\n//       state.status = \"success send data\";\r\n//       state.comments.push(action.payload);\r\n//     },\r\n//     [addComment.pending]: (state) => {\r\n//       state.status = \"pending send data\";\r\n//     },\r\n//     [addComment.rejected]: (state) => {\r\n//       state.status = \"rejected send data\";\r\n//     },\r\n\r\n//     //update comment in api\r\n//     [updateComment.fulfilled]: (state, action) => {\r\n//       state.status = \"success update data\";\r\n//       const { id } = action.payload;\r\n//       const comment = state.comments.find((comment) => comment.id == id);\r\n//       comment.comment = action.payload.comment;\r\n//     },\r\n//     [updateComment.pending]: (state) => {\r\n//       state.status = \"pending update data\";\r\n//     },\r\n//     [updateComment.rejected]: (state) => {\r\n//       state.status = \"rejected update data\";\r\n//     },\r\n\r\n//     //delete comment in api\r\n//     [deleteComment.fulfilled]: (state, action) => {\r\n//       state.status = \"success delete data\";\r\n//       const { id } = action.payload;\r\n//       state.comments = state.comments.filter((comment) => comment.id != id);\r\n//     },\r\n//     [deleteComment.pending]: (state) => {\r\n//       state.status = \"pending delete data\";\r\n//     },\r\n//     [deleteComment.rejected]: (state) => {\r\n//       state.status = \"rejected delete data\";\r\n//     },\r\n  },\r\n});\r\n\r\nexport default commentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,mBAAmB,GAAGJ,gBAAgB,CACjD,qCADiD,EAEjD,MAAOK,EAAP,IAAc;EACZ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,iDAAgDF,EAAG,EAD/B,CAAvB;EAGA,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACA,OAAOA,QAAP;AACD,CATgD,CAA5C,C,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMI,YAAY,GAAGX,WAAW,CAAC;EAC/BY,IAAI,EAAE,iBADyB;EAE/BC,YAAY,EAAE;IAAEC,gBAAgB,EAAE,EAApB;IAAwBC,MAAM,EAAE;EAAhC,CAFiB;EAG/BC,aAAa,EAAE;IACb;IACA,CAACb,mBAAmB,CAACc,SAArB,GAAiC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAClDV,OAAO,CAACC,GAAR,CAAYS,MAAZ;MACAD,KAAK,CAACH,MAAN,GAAe,oBAAf;MACAG,KAAK,CAACJ,gBAAN,GAAyBK,MAAM,CAACC,OAAhC;IACD,CANY;IAOb,CAACjB,mBAAmB,CAACkB,OAArB,GAAgCH,KAAD,IAAW;MACxCA,KAAK,CAACH,MAAN,GAAe,qBAAf;IACD,CATY;IAUb,CAACZ,mBAAmB,CAACmB,QAArB,GAAiCJ,KAAD,IAAW;MACzCA,KAAK,CAACH,MAAN,GAAe,sBAAf;IACD,CAZY,CAcb;IAEJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EArDiB;AAHgB,CAAD,CAAhC;AA4DA,eAAeJ,YAAY,CAACY,OAA5B"},"metadata":{},"sourceType":"module"}