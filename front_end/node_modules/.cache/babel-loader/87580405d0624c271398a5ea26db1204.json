{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getComments = createAsyncThunk(\"commentcom/getComments\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityComment\");\n  const response = await api.json();\n  console.log(response);\n  return response;\n});\nconst postSlice = createSlice({\n  name: \"commentcom\",\n  initialState: {\n    status: null,\n    comcomments: []\n  },\n  extraReducers: {\n    //get item from api\n    [getComments.fulfilled]: (state, action) => {\n      state.status = \"success fetch data\";\n      state.comments = action.payload;\n    },\n    [getComments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getComments","api","fetch","response","json","console","log","postSlice","name","initialState","status","comcomments","extraReducers","fulfilled","state","action","comments","payload","pending","rejected","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/ComunityComment.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const getComments = createAsyncThunk(\r\n  \"commentcom/getComments\",\r\n  async () => {\r\n    const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityComment\");\r\n    const response = await api.json();\r\n    console.log(response);\r\n    return response;\r\n  }\r\n);\r\n\r\n\r\n\r\nconst postSlice = createSlice({\r\n  name: \"commentcom\",\r\n  initialState: { status: null,comcomments: [] },\r\n  extraReducers: {\r\n    //get item from api\r\n    [getComments.fulfilled]: (state, action) => {\r\n      state.status = \"success fetch data\";\r\n      state.comments = action.payload;\r\n    },\r\n    [getComments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CACzC,wBADyC,EAEzC,YAAY;EACV,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAvB;EACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACA,OAAOA,QAAP;AACD,CAPwC,CAApC;AAYP,MAAMI,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,YADsB;EAE5BC,YAAY,EAAE;IAAEC,MAAM,EAAE,IAAV;IAAeC,WAAW,EAAE;EAA5B,CAFc;EAG5BC,aAAa,EAAE;IACb;IACA,CAACZ,WAAW,CAACa,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1CD,KAAK,CAACJ,MAAN,GAAe,oBAAf;MACAI,KAAK,CAACE,QAAN,GAAiBD,MAAM,CAACE,OAAxB;IACD,CALY;IAMb,CAACjB,WAAW,CAACkB,OAAb,GAAwBJ,KAAD,IAAW;MAChCA,KAAK,CAACJ,MAAN,GAAe,qBAAf;IACD,CARY;IASb,CAACV,WAAW,CAACmB,QAAb,GAAyBL,KAAD,IAAW;MACjCA,KAAK,CAACJ,MAAN,GAAe,sBAAf;IACD;EAXY;AAHa,CAAD,CAA7B;AAkBA,eAAeH,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}