{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport Swal from \"sweetalert2\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLogged: false\n  },\n  reducers: {\n    signup: (state, action) => {\n      if (action.payload) {\n        Swal.fire({\n          title: \"Register Successfull\",\n          text: \"Welcome to our site we hope you spent great time with us :)\",\n          type: \"success\",\n          confirmButtonColor: \"#ea512e\"\n        });\n        state.isLogged = true;\n      } //else{\n      //     Swal.fire({\n      //         title: \"Wrong\",\n      //         text: \"incorrect Email or Password\",\n      //         type: \"success\"\n      //     });\n      // }\n\n    },\n    login: (state, action) => {\n      if (action.payload) {\n        Swal.fire({\n          title: \"Login Successfull\",\n          text: \"Welcome to our site we hope you spent great time with us :)\",\n          type: \"success\",\n          confirmButtonColor: \"#ea512e\"\n        });\n        state.isLogged = true;\n      } //else{\n      //     Swal.fire({\n      //         title: \"Wrong\",\n      //         text: \"incorrect Email or Password\",\n      //         type: \"success\"\n      //     });\n      // }\n\n    },\n    logout: state => {\n      state.isLogged = false;\n      localStorage.clear();\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"LogOut Successfull\",\n        showConfirmButton: false,\n        timer: 2000\n      });\n    }\n  }\n});\nexport const {\n  signup,\n  login,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","Swal","userSlice","name","initialState","isLogged","reducers","signup","state","action","payload","fire","title","text","type","confirmButtonColor","login","logout","localStorage","clear","position","icon","showConfirmButton","timer","actions","reducer"],"sources":["C:/Users/User/Desktop/project 9/startupcompany_project_redux/front_end/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: { isLogged: false },\r\n  reducers: {\r\n    signup: (state, action) => {\r\n      if (action.payload) {\r\n        Swal.fire({\r\n          title: \"Register Successfull\",\r\n          text: \"Welcome to our site we hope you spent great time with us :)\",\r\n          type: \"success\",\r\n          confirmButtonColor: \"#ea512e\",\r\n        });\r\n        state.isLogged = true;\r\n      } //else{\r\n      //     Swal.fire({\r\n      //         title: \"Wrong\",\r\n      //         text: \"incorrect Email or Password\",\r\n      //         type: \"success\"\r\n      //     });\r\n\r\n      // }\r\n    },\r\n    login: (state, action) => {\r\n      if (action.payload) {\r\n        Swal.fire({\r\n          title: \"Login Successfull\",\r\n          text: \"Welcome to our site we hope you spent great time with us :)\",\r\n          type: \"success\",\r\n          confirmButtonColor: \"#ea512e\",\r\n        });\r\n        state.isLogged = true;\r\n      } //else{\r\n      //     Swal.fire({\r\n      //         title: \"Wrong\",\r\n      //         text: \"incorrect Email or Password\",\r\n      //         type: \"success\"\r\n      //     });\r\n\r\n      // }\r\n    },\r\n    logout: (state) => {\r\n      state.isLogged = false;\r\n      localStorage.clear();\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"success\",\r\n        title: \"LogOut Successfull\",\r\n        showConfirmButton: false,\r\n        timer: 2000,\r\n      });\r\n\r\n      \r\n    },\r\n  },\r\n});\r\nexport const { signup, login, logout } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,QAAQ,EAAE;EAAZ,CAFc;EAG5BC,QAAQ,EAAE;IACRC,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzB,IAAIA,MAAM,CAACC,OAAX,EAAoB;QAClBT,IAAI,CAACU,IAAL,CAAU;UACRC,KAAK,EAAE,sBADC;UAERC,IAAI,EAAE,6DAFE;UAGRC,IAAI,EAAE,SAHE;UAIRC,kBAAkB,EAAE;QAJZ,CAAV;QAMAP,KAAK,CAACH,QAAN,GAAiB,IAAjB;MACD,CATwB,CASvB;MACF;MACA;MACA;MACA;MACA;MAEA;;IACD,CAlBO;IAmBRW,KAAK,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MACxB,IAAIA,MAAM,CAACC,OAAX,EAAoB;QAClBT,IAAI,CAACU,IAAL,CAAU;UACRC,KAAK,EAAE,mBADC;UAERC,IAAI,EAAE,6DAFE;UAGRC,IAAI,EAAE,SAHE;UAIRC,kBAAkB,EAAE;QAJZ,CAAV;QAMAP,KAAK,CAACH,QAAN,GAAiB,IAAjB;MACD,CATuB,CAStB;MACF;MACA;MACA;MACA;MACA;MAEA;;IACD,CApCO;IAqCRY,MAAM,EAAGT,KAAD,IAAW;MACjBA,KAAK,CAACH,QAAN,GAAiB,KAAjB;MACAa,YAAY,CAACC,KAAb;MACAlB,IAAI,CAACU,IAAL,CAAU;QACRS,QAAQ,EAAE,SADF;QAERC,IAAI,EAAE,SAFE;QAGRT,KAAK,EAAE,oBAHC;QAIRU,iBAAiB,EAAE,KAJX;QAKRC,KAAK,EAAE;MALC,CAAV;IASD;EAjDO;AAHkB,CAAD,CAA7B;AAuDA,OAAO,MAAM;EAAEhB,MAAF;EAAUS,KAAV;EAAiBC;AAAjB,IAA4Bf,SAAS,CAACsB,OAA5C;AACP,eAAetB,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}