{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const getComments = createAsyncThunk(\"comment/getComments\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/apicomment\");\n  const response = await api.json();\n  return response;\n}); // export const addComment = createAsyncThunk(\n//   \"comment/addComment\",\n//   async (args, thunkAPI) => {\n//     const api = await axios.post(\"http://127.0.0.1:8000/api/addComment\", args);\n//     if (api.status == 200) {\n//       Swal.fire({\n//         position: \"top-end\",\n//         icon: \"success\",\n//         title: \"Contact Has been sent Successfully\",\n//         showConfirmButton: false,\n//         timer: 1500,\n//       });\n//     }\n//   }\n// );\n\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState: {\n    comment: [],\n    status: null\n  },\n  extraReducers: {\n    //get item from api\n    [getComments.fulfilled]: (state, action) => {\n      // console.log(action);\n      state.status = \"success fetch data\";\n      state.posts = action.payload;\n    },\n    [getComments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    } //addcomment to api\n    // [addComment.fulfilled]: (state, action) => {\n    //     console.log(action)\n    //   state.status = \"success send data\";\n    //   state.comment.push(action.payload);\n    // },\n    // [addComment.pending]: (state) => {\n    //   state.status = \"pending send data\";\n    // },\n    // [addComment.rejected]: (state) => {\n    //   state.status = \"rejected send data\";\n    // },\n\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","getComments","api","fetch","response","json","commentSlice","name","initialState","comment","status","extraReducers","fulfilled","state","action","posts","payload","pending","rejected","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/commentSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const getComments = createAsyncThunk(\"comment/getComments\", async () => {\r\n  const api = await fetch(\"http://127.0.0.1:8000/api/apicomment\");\r\n  const response = await api.json();\r\n\r\n  return response;\r\n});\r\n\r\n\r\n// export const addComment = createAsyncThunk(\r\n//   \"comment/addComment\",\r\n//   async (args, thunkAPI) => {\r\n//     const api = await axios.post(\"http://127.0.0.1:8000/api/addComment\", args);\r\n\r\n//     if (api.status == 200) {\r\n//       Swal.fire({\r\n//         position: \"top-end\",\r\n//         icon: \"success\",\r\n//         title: \"Contact Has been sent Successfully\",\r\n//         showConfirmButton: false,\r\n//         timer: 1500,\r\n//       });\r\n//     }\r\n//   }\r\n// );\r\n\r\n\r\nconst commentSlice = createSlice({\r\n  name: \"comment\",\r\n  initialState: { comment: [], status: null },\r\n  extraReducers: {\r\n    //get item from api\r\n    [getComments.fulfilled]: (state, action) => {\r\n      // console.log(action);\r\n      state.status = \"success fetch data\";\r\n      state.posts = action.payload;\r\n    },\r\n    [getComments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    //addcomment to api\r\n\r\n    // [addComment.fulfilled]: (state, action) => {\r\n    //     console.log(action)\r\n    //   state.status = \"success send data\";\r\n    //   state.comment.push(action.payload);\r\n    // },\r\n    // [addComment.pending]: (state) => {\r\n    //   state.status = \"pending send data\";\r\n    // },\r\n    // [addComment.rejected]: (state) => {\r\n    //   state.status = \"rejected send data\";\r\n    // },\r\n  },\r\n});\r\n\r\nexport default commentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,qBAAD,EAAwB,YAAY;EAC7E,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAAvB;EACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EAEA,OAAOD,QAAP;AACD,CAL0C,CAApC,C,CAQP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAME,YAAY,GAAGR,WAAW,CAAC;EAC/BS,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAE;IAAEC,OAAO,EAAE,EAAX;IAAeC,MAAM,EAAE;EAAvB,CAFiB;EAG/BC,aAAa,EAAE;IACb;IACA,CAACV,WAAW,CAACW,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1C;MACAD,KAAK,CAACH,MAAN,GAAe,oBAAf;MACAG,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACE,OAArB;IACD,CANY;IAOb,CAACf,WAAW,CAACgB,OAAb,GAAwBJ,KAAD,IAAW;MAChCA,KAAK,CAACH,MAAN,GAAe,qBAAf;IACD,CATY;IAUb,CAACT,WAAW,CAACiB,QAAb,GAAyBL,KAAD,IAAW;MACjCA,KAAK,CAACH,MAAN,GAAe,sBAAf;IACD,CAZY,CAcb;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EA1Ba;AAHgB,CAAD,CAAhC;AAiCA,eAAeJ,YAAY,CAACa,OAA5B"},"metadata":{},"sourceType":"module"}