{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const getComments = createAsyncThunk(\"comment/getComments\", async id => {\n  const api = await fetch(`http://127.0.0.1:8000/api/apicomment/${id}`);\n  const response = await api.json(); // console.log(response);\n\n  return response;\n});\nexport const addComment = createAsyncThunk(\"comment/addComment\", async (data, thunkAPI) => {\n  const response = await axios.post(\"http://127.0.0.1:8000/api/addComment\", data); // const add = await response.data;\n  // console.log('add',add)\n\n  if (response.status == 200) {\n    Swal.fire({\n      title: \"comment\",\n      text: \"Has been Added Successfully\",\n      type: \"success\"\n    });\n  }\n\n  return response.data; //  return add;\n}); ///////update\n\nexport const updateComment = createAsyncThunk(\"comment/updateComment\", async args => {\n  const id = args.id;\n  console.log(arg);\n  const response = await fetch(`http://127.0.0.1:8000/api/updateComment/${id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      comment: args.comment,\n      user_id_comment: args.user_id_comment,\n      post_id_comment: args.post_id_comment\n    })\n  });\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"comment\",\n      text: \"Has been updated Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n}); ///delete\n\nexport const deleteComment = createAsyncThunk(\"comment/deleteComments\", async id => {\n  const response = await fetch(`http://127.0.0.1:8000/api/deleteComment/${id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"comment\",\n      text: \"Has been deleted Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n}); /////////////////////////////////////////////////////////////////////////////////////\n\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState: {\n    comments: [],\n    status: null\n  },\n  extraReducers: {\n    //get comment from api\n    [getComments.fulfilled]: (state, action) => {\n      // console.log(action);\n      state.status = \"success fetch data\";\n      state.comments = action.payload;\n    },\n    [getComments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    },\n    // addcomment to api\n    [addComment.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success send data\";\n      state.comments.push(action.payload);\n    },\n    [addComment.pending]: state => {\n      state.status = \"pending send data\";\n    },\n    [addComment.rejected]: state => {\n      state.status = \"rejected send data\";\n    },\n    //update comment in api\n    [updateComment.fulfilled]: (state, action) => {\n      state.status = \"success update data\";\n      const {\n        id\n      } = action.payload;\n      const comment = state.comments.find(comment => comment.id == id);\n      comment.comment = action.payload.comment;\n    },\n    [updateComment.pending]: state => {\n      state.status = \"pending update data\";\n    },\n    [updateComment.rejected]: state => {\n      state.status = \"rejected update data\";\n    },\n    //delete comment in api\n    [deleteComment.fulfilled]: (state, action) => {\n      state.status = \"success delete data\";\n      const {\n        id\n      } = action.payload;\n      state.comments = state.comments.filter(comment => comment.id != id);\n    },\n    [deleteComment.pending]: state => {\n      state.status = \"pending delete data\";\n    },\n    [deleteComment.rejected]: state => {\n      state.status = \"rejected delete data\";\n    }\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","getComments","id","api","fetch","response","json","addComment","data","thunkAPI","post","status","fire","title","text","type","updateComment","args","console","log","arg","method","headers","body","JSON","stringify","comment","user_id_comment","post_id_comment","ok","res","deleteComment","commentSlice","name","initialState","comments","extraReducers","fulfilled","state","action","payload","pending","rejected","push","find","filter","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/commentSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const getComments = createAsyncThunk(\"comment/getComments\", async (id) => {\r\n  const api = await fetch(`http://127.0.0.1:8000/api/apicomment/${id}`);\r\n  const response = await api.json();\r\n  // console.log(response);\r\n  return response;\r\n});\r\n\r\n\r\n\r\nexport const addComment = createAsyncThunk(\r\n  \"comment/addComment\",\r\n  async (data, thunkAPI) => {\r\n    const response = await axios.post(\r\n      \"http://127.0.0.1:8000/api/addComment\",\r\n      data\r\n    );\r\n// const add = await response.data;\r\n// console.log('add',add)\r\n    if (response.status == 200) {\r\n      Swal.fire({\r\n        title: \"comment\",\r\n        text: \"Has been Added Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    return response.data;\r\n    //  return add;\r\n  }\r\n \r\n);\r\n///////update\r\nexport const updateComment = createAsyncThunk(\"comment/updateComment\", async (args) => {\r\n  const id = args.id;\r\n  console.log(arg)\r\n  const response = await fetch(\r\n    `http://127.0.0.1:8000/api/updateComment/${id}`,\r\n    {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ comment: args.comment, user_id_comment:args.user_id_comment,post_id_comment: args.post_id_comment}),\r\n    }\r\n\r\n  );\r\n\r\n  if (response.ok) {\r\n    Swal.fire({\r\n      title: \"comment\",\r\n      text: \"Has been updated Successfully\",\r\n      type: \"success\",\r\n    });\r\n  }\r\n  const res = response.json();\r\n  return res;\r\n});\r\n\r\n///delete\r\nexport const deleteComment = createAsyncThunk(\r\n  \"comment/deleteComments\",\r\n  async (id) => {\r\n    const response = await fetch(\r\n      `http://127.0.0.1:8000/api/deleteComment/${id}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      Swal.fire({\r\n        title: \"comment\",\r\n        text: \"Has been deleted Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    const res = response.json();\r\n    return res;\r\n  }\r\n);\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\nconst commentSlice = createSlice({\r\n  name: \"comment\",\r\n  initialState: { comments: [], status: null },\r\n  extraReducers: {\r\n    //get comment from api\r\n    [getComments.fulfilled]: (state, action) => {\r\n      // console.log(action);\r\n      state.status = \"success fetch data\";\r\n      state.comments = action.payload;\r\n    },\r\n    [getComments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    // addcomment to api\r\n\r\n    [addComment.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success send data\";\r\n      state.comments.push(action.payload);\r\n    },\r\n    [addComment.pending]: (state) => {\r\n      state.status = \"pending send data\";\r\n    },\r\n    [addComment.rejected]: (state) => {\r\n      state.status = \"rejected send data\";\r\n    },\r\n\r\n    //update comment in api\r\n    [updateComment.fulfilled]: (state, action) => {\r\n      state.status = \"success update data\";\r\n      const { id } = action.payload;\r\n      const comment = state.comments.find((comment) => comment.id == id);\r\n      comment.comment = action.payload.comment;\r\n\r\n\r\n    },\r\n    [updateComment.pending]: (state) => {\r\n      state.status = \"pending update data\";\r\n    },\r\n    [updateComment.rejected]: (state) => {\r\n      state.status = \"rejected update data\";\r\n    },\r\n\r\n    //delete comment in api\r\n    [deleteComment.fulfilled]: (state, action) => {\r\n      state.status = \"success delete data\";\r\n      const { id } = action.payload;\r\n      state.comments = state.comments.filter((comment) => comment.id != id);\r\n    },\r\n    [deleteComment.pending]: (state) => {\r\n      state.status = \"pending delete data\";\r\n    },\r\n    [deleteComment.rejected]: (state) => {\r\n      state.status = \"rejected delete data\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default commentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,qBAAD,EAAwB,MAAOK,EAAP,IAAc;EAC/E,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,wCAAuCF,EAAG,EAA5C,CAAvB;EACA,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB,CAF+E,CAG/E;;EACA,OAAOD,QAAP;AACD,CAL0C,CAApC;AASP,OAAO,MAAME,UAAU,GAAGV,gBAAgB,CACxC,oBADwC,EAExC,OAAOW,IAAP,EAAaC,QAAb,KAA0B;EACxB,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACW,IAAN,CACrB,sCADqB,EAErBF,IAFqB,CAAvB,CADwB,CAK5B;EACA;;EACI,IAAIH,QAAQ,CAACM,MAAT,IAAmB,GAAvB,EAA4B;IAC1BX,IAAI,CAACY,IAAL,CAAU;MACRC,KAAK,EAAE,SADC;MAERC,IAAI,EAAE,6BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,OAAOV,QAAQ,CAACG,IAAhB,CAdwB,CAexB;AACD,CAlBuC,CAAnC,C,CAqBP;;AACA,OAAO,MAAMQ,aAAa,GAAGnB,gBAAgB,CAAC,uBAAD,EAA0B,MAAOoB,IAAP,IAAgB;EACrF,MAAMf,EAAE,GAAGe,IAAI,CAACf,EAAhB;EACAgB,OAAO,CAACC,GAAR,CAAYC,GAAZ;EACA,MAAMf,QAAQ,GAAG,MAAMD,KAAK,CACzB,2CAA0CF,EAAG,EADpB,EAE1B;IACEmB,MAAM,EAAE,MADV;IAEEC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFX;IAGEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEC,OAAO,EAAET,IAAI,CAACS,OAAhB;MAAyBC,eAAe,EAACV,IAAI,CAACU,eAA9C;MAA8DC,eAAe,EAAEX,IAAI,CAACW;IAApF,CAAf;EAHR,CAF0B,CAA5B;;EAUA,IAAIvB,QAAQ,CAACwB,EAAb,EAAiB;IACf7B,IAAI,CAACY,IAAL,CAAU;MACRC,KAAK,EAAE,SADC;MAERC,IAAI,EAAE,+BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,MAAMe,GAAG,GAAGzB,QAAQ,CAACC,IAAT,EAAZ;EACA,OAAOwB,GAAP;AACD,CAtB4C,CAAtC,C,CAwBP;;AACA,OAAO,MAAMC,aAAa,GAAGlC,gBAAgB,CAC3C,wBAD2C,EAE3C,MAAOK,EAAP,IAAc;EACZ,MAAMG,QAAQ,GAAG,MAAMD,KAAK,CACzB,2CAA0CF,EAAG,EADpB,EAE1B;IACEmB,MAAM,EAAE,MADV;IAEEC,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EAFX,CAF0B,CAA5B;;EAOA,IAAIjB,QAAQ,CAACwB,EAAb,EAAiB;IACf7B,IAAI,CAACY,IAAL,CAAU;MACRC,KAAK,EAAE,SADC;MAERC,IAAI,EAAE,+BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,MAAMe,GAAG,GAAGzB,QAAQ,CAACC,IAAT,EAAZ;EACA,OAAOwB,GAAP;AACD,CAnB0C,CAAtC,C,CAuBP;;AACA,MAAME,YAAY,GAAGlC,WAAW,CAAC;EAC/BmC,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAE;IAAEC,QAAQ,EAAE,EAAZ;IAAgBxB,MAAM,EAAE;EAAxB,CAFiB;EAG/ByB,aAAa,EAAE;IACb;IACA,CAACnC,WAAW,CAACoC,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1C;MACAD,KAAK,CAAC3B,MAAN,GAAe,oBAAf;MACA2B,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;IACD,CANY;IAOb,CAACvC,WAAW,CAACwC,OAAb,GAAwBH,KAAD,IAAW;MAChCA,KAAK,CAAC3B,MAAN,GAAe,qBAAf;IACD,CATY;IAUb,CAACV,WAAW,CAACyC,QAAb,GAAyBJ,KAAD,IAAW;MACjCA,KAAK,CAAC3B,MAAN,GAAe,sBAAf;IACD,CAZY;IAcb;IAEA,CAACJ,UAAU,CAAC8B,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzCrB,OAAO,CAACC,GAAR,CAAYoB,MAAZ;MACAD,KAAK,CAAC3B,MAAN,GAAe,mBAAf;MACA2B,KAAK,CAACH,QAAN,CAAeQ,IAAf,CAAoBJ,MAAM,CAACC,OAA3B;IACD,CApBY;IAqBb,CAACjC,UAAU,CAACkC,OAAZ,GAAuBH,KAAD,IAAW;MAC/BA,KAAK,CAAC3B,MAAN,GAAe,mBAAf;IACD,CAvBY;IAwBb,CAACJ,UAAU,CAACmC,QAAZ,GAAwBJ,KAAD,IAAW;MAChCA,KAAK,CAAC3B,MAAN,GAAe,oBAAf;IACD,CA1BY;IA4Bb;IACA,CAACK,aAAa,CAACqB,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5CD,KAAK,CAAC3B,MAAN,GAAe,qBAAf;MACA,MAAM;QAAET;MAAF,IAASqC,MAAM,CAACC,OAAtB;MACA,MAAMd,OAAO,GAAGY,KAAK,CAACH,QAAN,CAAeS,IAAf,CAAqBlB,OAAD,IAAaA,OAAO,CAACxB,EAAR,IAAcA,EAA/C,CAAhB;MACAwB,OAAO,CAACA,OAAR,GAAkBa,MAAM,CAACC,OAAP,CAAed,OAAjC;IAGD,CApCY;IAqCb,CAACV,aAAa,CAACyB,OAAf,GAA0BH,KAAD,IAAW;MAClCA,KAAK,CAAC3B,MAAN,GAAe,qBAAf;IACD,CAvCY;IAwCb,CAACK,aAAa,CAAC0B,QAAf,GAA2BJ,KAAD,IAAW;MACnCA,KAAK,CAAC3B,MAAN,GAAe,sBAAf;IACD,CA1CY;IA4Cb;IACA,CAACoB,aAAa,CAACM,SAAf,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5CD,KAAK,CAAC3B,MAAN,GAAe,qBAAf;MACA,MAAM;QAAET;MAAF,IAASqC,MAAM,CAACC,OAAtB;MACAF,KAAK,CAACH,QAAN,GAAiBG,KAAK,CAACH,QAAN,CAAeU,MAAf,CAAuBnB,OAAD,IAAaA,OAAO,CAACxB,EAAR,IAAcA,EAAjD,CAAjB;IACD,CAjDY;IAkDb,CAAC6B,aAAa,CAACU,OAAf,GAA0BH,KAAD,IAAW;MAClCA,KAAK,CAAC3B,MAAN,GAAe,qBAAf;IACD,CApDY;IAqDb,CAACoB,aAAa,CAACW,QAAf,GAA2BJ,KAAD,IAAW;MACnCA,KAAK,CAAC3B,MAAN,GAAe,sBAAf;IACD;EAvDY;AAHgB,CAAD,CAAhC;AA8DA,eAAeqB,YAAY,CAACc,OAA5B"},"metadata":{},"sourceType":"module"}