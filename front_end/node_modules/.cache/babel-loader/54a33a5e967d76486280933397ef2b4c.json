{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const addComment = createAsyncThunk(\"comment/addComment\", async comment => {\n  const api = await axios.post('http://127.0.0.1:8000/api/addComment', comment); // });\n\n  if (api.status == 200) {\n    Swal.fire({\n      title: \"Comment\",\n      text: \"Has been Added Successfully\",\n      type: \"success\"\n    });\n  }\n});\nconst commentSlice = createSlice({\n  name: \"comment\",\n  initialState: {\n    comments: [],\n    status: null\n  },\n  extraReducers: {\n    //addcomment to api\n    [addComment.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success send data\";\n      state.comments.push(action.payload);\n    },\n    [addComment.pending]: state => {\n      state.status = \"pending send data\";\n    },\n    [addComment.rejected]: state => {\n      state.status = \"rejected send data\";\n    } // //update comment in api\n    // [updateComment.fulfilled]: (state, action) => {\n    //   state.status = \"success update data\";\n    //   const { id } = action.payload;\n    //   const comment = state.items.find((comment) => comment.id == id);\n    //   comment.name = action.payload.name;\n    //   comment.description = action.payload.description;\n    //   comment.image = action.payload.image;\n    // },\n    // [updateComment.pending]: (state) => {\n    //   state.status = \"pending update data\";\n    // },\n    // [updateComment.rejected]: (state) => {\n    //   state.status = \"rejected update data\";\n    // },\n    // //delete comment in api\n    // [deleteComment.fulfilled]: (state, action) => {\n    //   state.status = \"success delete data\";\n    //   const { id } = action.payload;\n    //   state.comments = state.comments.filter((comment) => comment.id != id);\n    // },\n    // [deleteComment.pending]: (state) => {\n    //   state.status = \"pending delete data\";\n    // },\n    // [deleteComment.rejected]: (state) => {\n    //   state.status = \"rejected delete data\";\n    // },\n\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","addComment","comment","api","post","status","fire","title","text","type","commentSlice","name","initialState","comments","extraReducers","fulfilled","state","action","console","log","push","payload","pending","rejected","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/commentSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\n\r\n\r\nexport const addComment = createAsyncThunk(\r\n  \"comment/addComment\",\r\n  async (comment) => {\r\n    const api = await axios.post( 'http://127.0.0.1:8000/api/addComment' ,comment);\r\n\r\n    // });\r\n    if (api.status == 200) {\r\n      Swal.fire({\r\n        title: \"Comment\",\r\n        text: \"Has been Added Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n\r\n  }\r\n);\r\n\r\n\r\nconst commentSlice = createSlice({\r\n  name: \"comment\",\r\n  initialState: { comments: [], status: null },\r\n  extraReducers: {\r\n\r\n    //addcomment to api\r\n\r\n    [addComment.fulfilled]: (state, action) => {\r\n        console.log(action)\r\n      state.status = \"success send data\";\r\n      state.comments.push(action.payload);\r\n    },\r\n    [addComment.pending]: (state) => {\r\n      state.status = \"pending send data\";\r\n    },\r\n    [addComment.rejected]: (state) => {\r\n      state.status = \"rejected send data\";\r\n    },\r\n\r\n    // //update comment in api\r\n    // [updateComment.fulfilled]: (state, action) => {\r\n    //   state.status = \"success update data\";\r\n    //   const { id } = action.payload;\r\n    //   const comment = state.items.find((comment) => comment.id == id);\r\n    //   comment.name = action.payload.name;\r\n    //   comment.description = action.payload.description;\r\n    //   comment.image = action.payload.image;\r\n    // },\r\n    // [updateComment.pending]: (state) => {\r\n    //   state.status = \"pending update data\";\r\n    // },\r\n    // [updateComment.rejected]: (state) => {\r\n    //   state.status = \"rejected update data\";\r\n    // },\r\n\r\n    // //delete comment in api\r\n    // [deleteComment.fulfilled]: (state, action) => {\r\n    //   state.status = \"success delete data\";\r\n    //   const { id } = action.payload;\r\n    //   state.comments = state.comments.filter((comment) => comment.id != id);\r\n    // },\r\n    // [deleteComment.pending]: (state) => {\r\n    //   state.status = \"pending delete data\";\r\n    // },\r\n    // [deleteComment.rejected]: (state) => {\r\n    //   state.status = \"rejected delete data\";\r\n    // },\r\n  },\r\n});\r\n\r\nexport default commentSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAMA,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,oBADwC,EAExC,MAAOK,OAAP,IAAmB;EACjB,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAY,sCAAZ,EAAoDF,OAApD,CAAlB,CADiB,CAGjB;;EACA,IAAIC,GAAG,CAACE,MAAJ,IAAc,GAAlB,EAAuB;IACrBL,IAAI,CAACM,IAAL,CAAU;MACRC,KAAK,EAAE,SADC;MAERC,IAAI,EAAE,6BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;AAEF,CAduC,CAAnC;AAkBP,MAAMC,YAAY,GAAGZ,WAAW,CAAC;EAC/Ba,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAE;IAAEC,QAAQ,EAAE,EAAZ;IAAgBR,MAAM,EAAE;EAAxB,CAFiB;EAG/BS,aAAa,EAAE;IAEb;IAEA,CAACb,UAAU,CAACc,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACvCC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACFD,KAAK,CAACX,MAAN,GAAe,mBAAf;MACAW,KAAK,CAACH,QAAN,CAAeO,IAAf,CAAoBH,MAAM,CAACI,OAA3B;IACD,CARY;IASb,CAACpB,UAAU,CAACqB,OAAZ,GAAuBN,KAAD,IAAW;MAC/BA,KAAK,CAACX,MAAN,GAAe,mBAAf;IACD,CAXY;IAYb,CAACJ,UAAU,CAACsB,QAAZ,GAAwBP,KAAD,IAAW;MAChCA,KAAK,CAACX,MAAN,GAAe,oBAAf;IACD,CAdY,CAgBb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EA3Ca;AAHgB,CAAD,CAAhC;AAkDA,eAAeK,YAAY,CAACc,OAA5B"},"metadata":{},"sourceType":"module"}