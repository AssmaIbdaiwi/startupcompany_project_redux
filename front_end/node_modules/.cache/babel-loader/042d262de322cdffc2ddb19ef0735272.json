{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const getComunityPosts = createAsyncThunk(\"comunitypost/getComunityPosts\", async () => {\n  const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityPost\");\n  const response = await api.json();\n  return response;\n});\nexport const getSingleComunity = createAsyncThunk(\"comunitypost/getSingleComunity\", async id => {\n  const api = await fetch(`http://127.0.0.1:8000/api/apiCommunityPost/${id}`);\n  const response = await api.json(); // console.log(response);\n\n  return response;\n});\nexport const addComunityPosts = createAsyncThunk(\"comunitypost/addComunityPosts\", async (data, thunkAPI) => {\n  const response = await axios.post(\"http://127.0.0.1:8000/api/addComunityPost\", data); // const add = await response.data;\n  // console.log('add',add)\n\n  if (response.status == 200) {\n    Swal.fire({\n      title: \"Post\",\n      text: \"Has been Added Successfully\",\n      type: \"success\"\n    });\n  }\n\n  return response.data; //  return add;\n}); ///////delete\n\nexport const deleteComunityPost = createAsyncThunk(\"comunitypost/deleteComunityPost\", async id => {\n  const response = await fetch(`http://127.0.0.1:8000/api/deleteComunityPost/${id}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  console.log(response);\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"Post\",\n      text: \"Has been deleted Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n});\nexport const getComcomments = createAsyncThunk(\"comunitypost/getComcomments\", async id => {\n  const api = await fetch(`http://127.0.0.1:8000/api/apiCommunityComment/${id}`);\n  const response = await api.json();\n  return response;\n});\nexport const addComunityComment = createAsyncThunk(\"comunitypost/addComunityComment\", async (data, thunkAPI) => {\n  const response = await axios.post(\"http://127.0.0.1:8000/api/addComunityComment\", data); // const add = await response.data;\n  // console.log('add',add)\n\n  if (response.status == 200) {\n    Swal.fire({\n      title: \"Post\",\n      text: \"Has been Added Successfully\",\n      type: \"success\"\n    });\n  }\n\n  return response.data; //  return add;\n});\nconst postSlice = createSlice({\n  name: \"comunitypost\",\n  initialState: {\n    status: null,\n    comunityposts: [],\n    comcomments: [],\n    singlecompost: []\n  },\n  extraReducers: {\n    //get comunitypost from api\n    [getComunityPosts.fulfilled]: (state, action) => {\n      //   console.log(action);\n      state.status = \"success fetch data\";\n      state.comunityposts = action.payload;\n    },\n    [getComunityPosts.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComunityPosts.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    },\n    // addComunityPosts to api\n    [addComunityPosts.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success send data\";\n      state.comunityposts.push(action.payload);\n    },\n    [addComunityPosts.pending]: state => {\n      state.status = \"pending send data\";\n    },\n    [addComunityPosts.rejected]: state => {\n      state.status = \"rejected send data\";\n    },\n    //update comment in api\n    // [getComunityPosts.fulfilled]: (state, action) => {\n    //   state.status = \"success update data\";\n    //   const { id } = action.payload;\n    //   const comunityposts = state.comunityposts.find(\n    //     (comunitypost) => comunitypost.id == id\n    //   );\n    //   comunityposts.comunitypost = action.payload.comunitypost;\n    // },\n    // [getComunityPosts.pending]: (state) => {\n    //   state.status = \"pending update data\";\n    // },\n    // [getComunityPosts.rejected]: (state) => {\n    //   state.status = \"rejected update data\";\n    // },\n    //delete comunitypost in api\n    [deleteComunityPost.fulfilled]: (state, action) => {\n      state.status = \"success delete data\";\n      const {\n        id\n      } = action.payload;\n      state.comunityposts = state.comunityposts.filter(comunitypost => comunitypost.id != id);\n    },\n    [deleteComunityPost.pending]: state => {\n      state.status = \"pending delete data\";\n    },\n    [deleteComunityPost.rejected]: state => {\n      state.status = \"rejected delete data\";\n    },\n    [getComcomments.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success fetch data\";\n      state.comcomments = action.payload;\n    },\n    [getComcomments.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getComcomments.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    },\n    [addComunityComment.fulfilled]: (state, action) => {\n      console.log(action);\n      state.status = \"success send data\";\n      state.comunityposts.push(action.payload);\n    },\n    [addComunityComment.pending]: state => {\n      state.status = \"pending send data\";\n    },\n    [addComunityComment.rejected]: state => {\n      state.status = \"rejected send data\";\n    },\n    ///single\n    [getSingleComunity.fulfilled]: (state, action) => {\n      state.status = \"success fetch data\";\n      state.singlecompost = action.payload;\n    },\n    [getSingleComunity.pending]: state => {\n      state.status = \"pending  fetch data\";\n    },\n    [getSingleComunity.rejected]: state => {\n      state.status = \"rejected  fetch data\";\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","getComunityPosts","api","fetch","response","json","getSingleComunity","id","addComunityPosts","data","thunkAPI","post","status","fire","title","text","type","deleteComunityPost","method","headers","console","log","ok","res","getComcomments","addComunityComment","postSlice","name","initialState","comunityposts","comcomments","singlecompost","extraReducers","fulfilled","state","action","payload","pending","rejected","push","filter","comunitypost","reducer"],"sources":["C:/xampp/htdocs/startupcompany_project_redux/front_end/src/redux/ComunityPost.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const getComunityPosts = createAsyncThunk(\"comunitypost/getComunityPosts\", async () => {\r\n  const api = await fetch(\"http://127.0.0.1:8000/api/apiCommunityPost\");\r\n  const response = await api.json();\r\n\r\n  return response;\r\n});\r\n\r\nexport const getSingleComunity = createAsyncThunk(\r\n  \"comunitypost/getSingleComunity\",\r\n  async (id) => {\r\n    const api = await fetch(\r\n      `http://127.0.0.1:8000/api/apiCommunityPost/${id}`\r\n    );\r\n    const response = await api.json();\r\n    // console.log(response);\r\n    return response;\r\n  }\r\n);\r\n\r\n\r\nexport const addComunityPosts = createAsyncThunk(\r\n  \"comunitypost/addComunityPosts\",\r\n  async (data, thunkAPI) => {\r\n    const response = await axios.post(\r\n      \"http://127.0.0.1:8000/api/addComunityPost\",\r\n      data\r\n    );\r\n    // const add = await response.data;\r\n    // console.log('add',add)\r\n    if (response.status == 200) {\r\n      Swal.fire({\r\n        title: \"Post\",\r\n        text: \"Has been Added Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    return response.data;\r\n    //  return add;\r\n  }\r\n);\r\n\r\n///////delete\r\nexport const deleteComunityPost = createAsyncThunk(\r\n  \"comunitypost/deleteComunityPost\",\r\n  async (id) => {\r\n    const response = await fetch(\r\n      `http://127.0.0.1:8000/api/deleteComunityPost/${id}`,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n      console.log(response);\r\n    if (response.ok) {\r\n      Swal.fire({\r\n        title: \"Post\",\r\n        text: \"Has been deleted Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    const res = response.json();\r\n    return res;\r\n  }\r\n);\r\n\r\n\r\nexport const getComcomments = createAsyncThunk(\r\n  \"comunitypost/getComcomments\",\r\n  async (id) => {\r\n    const api = await fetch(`http://127.0.0.1:8000/api/apiCommunityComment/${id}`);\r\n    const response = await api.json();\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const addComunityComment = createAsyncThunk(\r\n  \"comunitypost/addComunityComment\",\r\n  async (data, thunkAPI) => {\r\n    const response = await axios.post(\r\n      \"http://127.0.0.1:8000/api/addComunityComment\",\r\n      data\r\n    );\r\n    // const add = await response.data;\r\n    // console.log('add',add)\r\n    if (response.status == 200) {\r\n      Swal.fire({\r\n        title: \"Post\",\r\n        text: \"Has been Added Successfully\",\r\n        type: \"success\",\r\n      });\r\n    }\r\n    return response.data;\r\n    //  return add;\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\nconst postSlice = createSlice({\r\n  name: \"comunitypost\",\r\n  initialState: {\r\n    status: null,\r\n    comunityposts: [],\r\n    comcomments: [],\r\n    singlecompost: [],\r\n  },\r\n  extraReducers: {\r\n    //get comunitypost from api\r\n    [getComunityPosts.fulfilled]: (state, action) => {\r\n      //   console.log(action);\r\n      state.status = \"success fetch data\";\r\n      state.comunityposts = action.payload;\r\n    },\r\n    [getComunityPosts.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComunityPosts.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    // addComunityPosts to api\r\n\r\n    [addComunityPosts.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success send data\";\r\n      state.comunityposts.push(action.payload);\r\n    },\r\n    [addComunityPosts.pending]: (state) => {\r\n      state.status = \"pending send data\";\r\n    },\r\n    [addComunityPosts.rejected]: (state) => {\r\n      state.status = \"rejected send data\";\r\n    },\r\n    //update comment in api\r\n    // [getComunityPosts.fulfilled]: (state, action) => {\r\n    //   state.status = \"success update data\";\r\n    //   const { id } = action.payload;\r\n    //   const comunityposts = state.comunityposts.find(\r\n    //     (comunitypost) => comunitypost.id == id\r\n    //   );\r\n    //   comunityposts.comunitypost = action.payload.comunitypost;\r\n    // },\r\n    // [getComunityPosts.pending]: (state) => {\r\n    //   state.status = \"pending update data\";\r\n    // },\r\n    // [getComunityPosts.rejected]: (state) => {\r\n    //   state.status = \"rejected update data\";\r\n    // },\r\n\r\n    //delete comunitypost in api\r\n    [deleteComunityPost.fulfilled]: (state, action) => {\r\n      state.status = \"success delete data\";\r\n      const { id } = action.payload;\r\n      state.comunityposts = state.comunityposts.filter(\r\n        (comunitypost) => comunitypost.id != id\r\n      );\r\n    },\r\n    [deleteComunityPost.pending]: (state) => {\r\n      state.status = \"pending delete data\";\r\n    },\r\n    [deleteComunityPost.rejected]: (state) => {\r\n      state.status = \"rejected delete data\";\r\n    },\r\n\r\n    [getComcomments.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success fetch data\";\r\n      state.comcomments = action.payload;\r\n    },\r\n    [getComcomments.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getComcomments.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n\r\n    [addComunityComment.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.status = \"success send data\";\r\n      state.comunityposts.push(action.payload);\r\n    },\r\n    [addComunityComment.pending]: (state) => {\r\n      state.status = \"pending send data\";\r\n    },\r\n    [addComunityComment.rejected]: (state) => {\r\n      state.status = \"rejected send data\";\r\n    },\r\n\r\n    ///single\r\n    [getSingleComunity.fulfilled]: (state, action) => {\r\n      state.status = \"success fetch data\";\r\n      state.singlecompost = action.payload;\r\n    },\r\n    [getSingleComunity.pending]: (state) => {\r\n      state.status = \"pending  fetch data\";\r\n    },\r\n    [getSingleComunity.rejected]: (state) => {\r\n      state.status = \"rejected  fetch data\";\r\n    },\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAGA,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAAC,+BAAD,EAAkC,YAAY;EAC5F,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;EACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EAEA,OAAOD,QAAP;AACD,CAL+C,CAAzC;AAOP,OAAO,MAAME,iBAAiB,GAAGT,gBAAgB,CAC/C,gCAD+C,EAE/C,MAAOU,EAAP,IAAc;EACZ,MAAML,GAAG,GAAG,MAAMC,KAAK,CACpB,8CAA6CI,EAAG,EAD5B,CAAvB;EAGA,MAAMH,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB,CAJY,CAKZ;;EACA,OAAOD,QAAP;AACD,CAT8C,CAA1C;AAaP,OAAO,MAAMI,gBAAgB,GAAGX,gBAAgB,CAC9C,+BAD8C,EAE9C,OAAOY,IAAP,EAAaC,QAAb,KAA0B;EACxB,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAN,CACrB,2CADqB,EAErBF,IAFqB,CAAvB,CADwB,CAKxB;EACA;;EACA,IAAIL,QAAQ,CAACQ,MAAT,IAAmB,GAAvB,EAA4B;IAC1BZ,IAAI,CAACa,IAAL,CAAU;MACRC,KAAK,EAAE,MADC;MAERC,IAAI,EAAE,6BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,OAAOZ,QAAQ,CAACK,IAAhB,CAdwB,CAexB;AACD,CAlB6C,CAAzC,C,CAqBP;;AACA,OAAO,MAAMQ,kBAAkB,GAAGpB,gBAAgB,CAChD,iCADgD,EAEhD,MAAOU,EAAP,IAAc;EACZ,MAAMH,QAAQ,GAAG,MAAMD,KAAK,CACzB,gDAA+CI,EAAG,EADzB,EAE1B;IACEW,MAAM,EAAE,MADV;IAEEC,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EAFX,CAF0B,CAA5B;EAOEC,OAAO,CAACC,GAAR,CAAYjB,QAAZ;;EACF,IAAIA,QAAQ,CAACkB,EAAb,EAAiB;IACftB,IAAI,CAACa,IAAL,CAAU;MACRC,KAAK,EAAE,MADC;MAERC,IAAI,EAAE,+BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,MAAMO,GAAG,GAAGnB,QAAQ,CAACC,IAAT,EAAZ;EACA,OAAOkB,GAAP;AACD,CApB+C,CAA3C;AAwBP,OAAO,MAAMC,cAAc,GAAG3B,gBAAgB,CAC5C,6BAD4C,EAE5C,MAAOU,EAAP,IAAc;EACZ,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,iDAAgDI,EAAG,EAArD,CAAvB;EACA,MAAMH,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;EACA,OAAOD,QAAP;AACD,CAN2C,CAAvC;AASP,OAAO,MAAMqB,kBAAkB,GAAG5B,gBAAgB,CAChD,iCADgD,EAEhD,OAAOY,IAAP,EAAaC,QAAb,KAA0B;EACxB,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,IAAN,CACrB,8CADqB,EAErBF,IAFqB,CAAvB,CADwB,CAKxB;EACA;;EACA,IAAIL,QAAQ,CAACQ,MAAT,IAAmB,GAAvB,EAA4B;IAC1BZ,IAAI,CAACa,IAAL,CAAU;MACRC,KAAK,EAAE,MADC;MAERC,IAAI,EAAE,6BAFE;MAGRC,IAAI,EAAE;IAHE,CAAV;EAKD;;EACD,OAAOZ,QAAQ,CAACK,IAAhB,CAdwB,CAexB;AACD,CAlB+C,CAA3C;AAwBP,MAAMiB,SAAS,GAAG5B,WAAW,CAAC;EAC5B6B,IAAI,EAAE,cADsB;EAE5BC,YAAY,EAAE;IACZhB,MAAM,EAAE,IADI;IAEZiB,aAAa,EAAE,EAFH;IAGZC,WAAW,EAAE,EAHD;IAIZC,aAAa,EAAE;EAJH,CAFc;EAQ5BC,aAAa,EAAE;IACb;IACA,CAAC/B,gBAAgB,CAACgC,SAAlB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/C;MACAD,KAAK,CAACtB,MAAN,GAAe,oBAAf;MACAsB,KAAK,CAACL,aAAN,GAAsBM,MAAM,CAACC,OAA7B;IACD,CANY;IAOb,CAACnC,gBAAgB,CAACoC,OAAlB,GAA6BH,KAAD,IAAW;MACrCA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CATY;IAUb,CAACX,gBAAgB,CAACqC,QAAlB,GAA8BJ,KAAD,IAAW;MACtCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD,CAZY;IAcb;IAEA,CAACJ,gBAAgB,CAACyB,SAAlB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC/Cf,OAAO,CAACC,GAAR,CAAYc,MAAZ;MACAD,KAAK,CAACtB,MAAN,GAAe,mBAAf;MACAsB,KAAK,CAACL,aAAN,CAAoBU,IAApB,CAAyBJ,MAAM,CAACC,OAAhC;IACD,CApBY;IAqBb,CAAC5B,gBAAgB,CAAC6B,OAAlB,GAA6BH,KAAD,IAAW;MACrCA,KAAK,CAACtB,MAAN,GAAe,mBAAf;IACD,CAvBY;IAwBb,CAACJ,gBAAgB,CAAC8B,QAAlB,GAA8BJ,KAAD,IAAW;MACtCA,KAAK,CAACtB,MAAN,GAAe,oBAAf;IACD,CA1BY;IA2Bb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,CAACK,kBAAkB,CAACgB,SAApB,GAAgC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjDD,KAAK,CAACtB,MAAN,GAAe,qBAAf;MACA,MAAM;QAAEL;MAAF,IAAS4B,MAAM,CAACC,OAAtB;MACAF,KAAK,CAACL,aAAN,GAAsBK,KAAK,CAACL,aAAN,CAAoBW,MAApB,CACnBC,YAAD,IAAkBA,YAAY,CAAClC,EAAb,IAAmBA,EADjB,CAAtB;IAGD,CAlDY;IAmDb,CAACU,kBAAkB,CAACoB,OAApB,GAA+BH,KAAD,IAAW;MACvCA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CArDY;IAsDb,CAACK,kBAAkB,CAACqB,QAApB,GAAgCJ,KAAD,IAAW;MACxCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD,CAxDY;IA0Db,CAACY,cAAc,CAACS,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7Cf,OAAO,CAACC,GAAR,CAAYc,MAAZ;MACAD,KAAK,CAACtB,MAAN,GAAe,oBAAf;MACAsB,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;IACD,CA9DY;IA+Db,CAACZ,cAAc,CAACa,OAAhB,GAA2BH,KAAD,IAAW;MACnCA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CAjEY;IAkEb,CAACY,cAAc,CAACc,QAAhB,GAA4BJ,KAAD,IAAW;MACpCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD,CApEY;IAsEb,CAACa,kBAAkB,CAACQ,SAApB,GAAgC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjDf,OAAO,CAACC,GAAR,CAAYc,MAAZ;MACAD,KAAK,CAACtB,MAAN,GAAe,mBAAf;MACAsB,KAAK,CAACL,aAAN,CAAoBU,IAApB,CAAyBJ,MAAM,CAACC,OAAhC;IACD,CA1EY;IA2Eb,CAACX,kBAAkB,CAACY,OAApB,GAA+BH,KAAD,IAAW;MACvCA,KAAK,CAACtB,MAAN,GAAe,mBAAf;IACD,CA7EY;IA8Eb,CAACa,kBAAkB,CAACa,QAApB,GAAgCJ,KAAD,IAAW;MACxCA,KAAK,CAACtB,MAAN,GAAe,oBAAf;IACD,CAhFY;IAkFb;IACA,CAACN,iBAAiB,CAAC2B,SAAnB,GAA+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAChDD,KAAK,CAACtB,MAAN,GAAe,oBAAf;MACAsB,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACC,OAA7B;IACD,CAtFY;IAuFb,CAAC9B,iBAAiB,CAAC+B,OAAnB,GAA8BH,KAAD,IAAW;MACtCA,KAAK,CAACtB,MAAN,GAAe,qBAAf;IACD,CAzFY;IA0Fb,CAACN,iBAAiB,CAACgC,QAAnB,GAA+BJ,KAAD,IAAW;MACvCA,KAAK,CAACtB,MAAN,GAAe,sBAAf;IACD;EA5FY;AARa,CAAD,CAA7B;AAwGA,eAAec,SAAS,CAACgB,OAAzB"},"metadata":{},"sourceType":"module"}